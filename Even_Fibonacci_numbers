import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

/*
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with  and , the first  terms will be:
 * 1,2,3,5,8,13,21,34,55,89,...

By considering the terms in the Fibonacci sequence whose values do not exceed N, find the sum of the even-valued terms.

Input Format

First line contains T that denotes the number of test cases. This is followed by T lines, each containing an integer, N.

Constraints
1<=T<=10^5
10<=N<=4*10^16
Output Format

Print the required answer for each test case.

Sample Input 0

2
10
100
Sample Output 0

10
44
 */

public class Even_Fibonacci_numbers {

    public static void main(String[] args) { 
        //use a scanner to read from stdin
        Scanner scan = new Scanner(System.in);

        //declare variables T and N
        int T;
        long N;

        //get the number of inputs
        T = scan.nextInt();


        //for each input compute the required sum
        for(int i=0; i<T; i++){
            N = scan.nextLong();
            System.out.println(fill(N));

        }
    }

    public static long fill(long N){
        //declare the first two numbers and their sum of even numbers
        long sum = 2;
        long a = 1;
        long b = 2;
        if (N==1){
            return 0;
        } else if(N==2){
            return 2;
        } else{
            while(N>b){
                long x = a;
                a = b;
                b = b+x;
                if(b%2==0){
                    sum = sum+b;
                }
            } 
        }

        //if the last number added was even, removce it
        if(b%2==0){
            return sum-b;
        }else{
            return sum;
        }
    }

}
